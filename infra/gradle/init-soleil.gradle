initscript {
    repositories {
        maven {
            url "http://calypso/nexus/content/groups/public"
        }
    }
    dependencies {
        classpath "org.mongodb:mongo-java-driver:2.11.3"
    }
}


import com.mongodb.*

apply plugin: EnterpriseRepositoryPlugin



class EnterpriseRepositoryPlugin implements Plugin<Gradle> {

    String latestVerison = null;

    void apply(Gradle gradle) {

        MongoClient mongoClient = new MongoClient("localhost", 27017);
        DB db = mongoClient.getDB("repo");
        DBCollection coll = db.getCollection("latest_artifacts");
        BasicDBObject idDoc = new BasicDBObject("org", "fr.esrf.tango")
                .append("name", "TangORB")
                .append("type", "binary")
                .append("status", "RELEASED");
        BasicDBObject query = new BasicDBObject("_id", idDoc);
        DBCursor cursor = coll.find(query);

        try {
            while (cursor.hasNext()) {
                BasicDBObject doc = cursor.next();
                latestVerison = doc.value.version;
                System.out.println("USE VERSION: " + latestVerison);
            }
        }
        finally {
            cursor.close();
        }

        // ONLY USE ENTERPRISE REPO FOR DEPENDENCIES
        gradle.allprojects { project ->

            project.configurations.all {
                resolutionStrategy.eachDependency {
                    DependencyResolveDetails details ->
                        if (details.requested.group == 'fr.esrf.tango' && details.requested.name == 'TangORB' && details.requested.version == 'latest') {
                            details.useVersion latestVerison
                        }
                }
            }


        }
    }
}
